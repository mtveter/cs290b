<?xml version="1.0" encoding="UTF-8"?>

<project name="hw3" default="dist" basedir=".">
    <description>Build xml for homework 3 - CS290B.</description>
	
     <!-- set global properties for this build -->
  <property name="src"   location="src" />
  <property name="build" location="build" />
  <property name="dist"  location="dist" />
  
  <!-- codebase properties 
  <property name="computer_file_codebase" location="/cs/student/mtveter/public/CS290B/codebase/hw2/computer/" />
  <property name="computer_web_codebase"  value="http://cs.ucsb.edu/~mtveter/CS290B/codebase/hw2/computer/" />  
  <property name="client_file_codebase"   location="/cs/student/mtveter/public/CS290B/codebase/hw2/client/" />
  <property name="client_web_codebase"    value="http://cs.ucsb.edu/~mtveter/CS290B/codebase/hw2/client/" />
  -->
	
  <target name="compile" description="compile the source" >
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>  
  
    <!-- Compile the java code from ${src} into ${build} -->
    <javac includeantruntime="false" srcdir="${src}" destdir="${build}"/>
  </target>

  <target name="dist" depends="compile" description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>
    <!-- Make computer jar file -->
    <jar jarfile="${dist}/project.jar" basedir="${build}" includes="system/** api/** clients/** tasks/** util/**"/>
  </target>
  
  <target name="generateJavadoc" depends="compile" description="create javadocs">
  	<javadoc packagenames="tasks.*" sourcepath="${src}" destdir="documents/javadoc" />
  </target>
  
  <target name="runComputer" depends="dist" description="run computer" >
  	<java classname="system.ComputerImpl" fork="true">
  	  <!-- <jvmarg value="-Djava.rmi.server.codebase=${computer_web_codebase}"/> -->
  	  <jvmarg value="-Djava.security.policy=policy"/>
  	  <arg value="${arg0}"/>
  	  <arg value="${arg1}"/>
  	  <arg value="${arg2}"/>
  	  <classpath>
  	    <pathelement location="dist/project.jar"/>
  	  </classpath>
  	</java>
  </target>  
	
  <target name="runSpace" depends="dist" description="run space">
	<java classname="system.SpaceImpl" fork="true">
		<!-- <jvmarg value="-Djava.rmi.server.codebase=${computer_web_codebase}"/> -->
		<jvmarg value="-Djava.security.policy=policy"/>
		<arg value="${arg0}"/>
			<classpath>
		  		<pathelement location="dist/project.jar"/>
		  	</classpath>
		</java>
  	</target>
  
  <target name="runFibonacciClient" depends="dist" description="run mandelbrot" >
  	<java classname="clients.ClientFibonacci" fork="true">
  	  <!--<jvmarg value="-Djava.rmi.server.codebase=${client_web_codebase}"/>-->
  	  <jvmarg value="-Djava.security.policy=policy"/>
  	  <arg value="${arg0}"/>
  	  <classpath>
  	    <pathelement location="dist/project.jar"/>
  	  </classpath>
  	</java>
  </target>
  
  <target name="runTspClient" depends="dist" description="run tsp" >
  	<java classname="clients.ClientEuclideanTsp" fork="true">
  	  <!--<jvmarg value="-Djava.rmi.server.codebase=${client_web_codebase}"/>-->
  	  <jvmarg value="-Djava.security.policy=policy"/>
  	  <arg value="${arg0}"/>
  	  <classpath>
  	    <pathelement location="dist/project.jar"/>
  	  </classpath>
  	</java>
  </target>

  <target name="clean" description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${client_file_codebase}/tasks"/>
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
  
</project>