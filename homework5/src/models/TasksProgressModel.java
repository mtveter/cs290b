package models;

/* Model accessing maintaining progress data of tasks in branch and bound composition and decomposition */
public class TasksProgressModel {
	
	/** Current number of total pruned tasks */
	private int totalPrunedTasks;
	/** Current number of total generated tasks */
	private int totalGeneratedTasks;
	/** Current number of total completed tasks */
	private int totalCompletedTasks;
	/** Total number of tasks that would have been generated by execution of job with no pruning mechanism */
	private int totalTasks;
	
	private int numberOfCities;
	
	private double tasksCompletedPercentage;

	public TasksProgressModel() {
		totalPrunedTasks = 0;
		totalGeneratedTasks = 0;
		totalCompletedTasks = 0;
	}
	public void setTotalCities(int n){
		this.numberOfCities = n;
<<<<<<< HEAD:homework5/src/Models/TasksProgressModel.java
	}
	public int getTotalCities() {
		return this.numberOfCities;
=======
>>>>>>> gui-2:homework5/src/models/TasksProgressModel.java
	}
	public int getTotalPrunedTasks() {
		return totalPrunedTasks;
	}
	public int getTotalGeneratedTasks() {
		return totalGeneratedTasks;
	}
	public int getTotalCompletedTasks() {
		return totalCompletedTasks;
	}
	public double getTasksCompletedPercentage() {
		return tasksCompletedPercentage;
	}
<<<<<<< HEAD:homework5/src/Models/TasksProgressModel.java
	// Find the percentage weight value of the completed task and adds it to total percentage progress
	public void addCompletedTaskWeight(String id) {
		int numberOfLevels = id.length();
		double tempWeight = 100;
		for(int level = 1; level < numberOfLevels; level++) {
			tempWeight /= (numberOfCities - level); 
		}
=======
	int counter;
	// Find the percentage weight value of the completed task and adds it to total percentage progress
	public void addCompletedTaskWeight(int numberOfLevels) {
		System.out.println("AddCompletedTaskWeight #Count: "+(counter++));
		double tempWeight = 100.0;
		for(int level = 1; level < numberOfLevels; level++) {
			tempWeight /= (numberOfCities - level); 
			System.out.println("Reducing tempWeight: "+tempWeight);
		}
		System.out.println("Number of levels: "+numberOfLevels);
		System.out.println("Final Temp weight: "+tempWeight);
>>>>>>> gui-2:homework5/src/models/TasksProgressModel.java
		tasksCompletedPercentage += tempWeight;
	}
	/**
	 * Increases count of total pruned tasks
	 * @param prunedTasks	Number of newly pruned tasks
	 */
	public void increaseTotalPrunedTasks(int prunedTasks) {
		this.totalPrunedTasks += prunedTasks;
	}
	/**
	 * Increases count of total generated tasks
	 * @param genTasks		Number of newly generated tasks
	 */
	public void increaseTotalGeneratedTasks(int genTasks) {
		this.totalGeneratedTasks += genTasks;
	}
	/**
	 * Increases count of total completed tasks
	 * @param completedTasks	Number of newly completed tasks
	 */
	public void increaseTotalCompletedTasks(int completedTasks) {
		this.totalCompletedTasks += completedTasks;
	}
	/**
	 * Calculates ratio of pruned tasks relative to generated tasks
	 * @return	Ratio
	 */
	public double getPrunedOfGeneratedTasksRatio() {
		return ((double)totalPrunedTasks)/totalGeneratedTasks;
	}
	/**
	 * Calculates ratio of pruned tasks relative to total tasks
	 * @return	Ratio
	 */
	public double getPrunedOfTotalTasksRatio(){
		return ((double)totalPrunedTasks)/totalTasks;
	}
	/**
	 * Calculates ratio of completed tasks relative to total tasks
	 * @return	Ratio
	 */
	public double getCompletedOfTotalTasksRatio(){
		return ((double)totalCompletedTasks)/totalTasks;
	}
	/**
	 * Calculates ratio of generated tasks relative to total tasks
	 * @return	Ratio
	 */
	public double getGeneratedOfTotalTasksRatio(){
		return ((double)totalGeneratedTasks)/totalTasks;
	}
}
